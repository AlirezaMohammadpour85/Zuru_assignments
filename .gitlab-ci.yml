image: docker:latest

stages:
  - build
  - deploy

variables:
  AWS_DEFAULT_REGION: "us-east-1"
  ECR_REGISTRY: "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com"
  ECR_REPO_NAME: "go-api-repo"
  NGINX_IMAGE_TAG: "${ECR_REGISTRY}/${ECR_REPO_NAME}:nginx-proxy-image"
  API_IMAGE_TAG: "${ECR_REGISTRY}/${ECR_REPO_NAME}:go-api-image"
  ECS_CLUSTER: "go-api-cluster"
  ECS_SERVICE_API: "go-api-service"

before_script:
  - apk add --no-cache python3 py3-pip
  - pip3 install awscli
  - export PATH=$HOME/.local/bin:$PATH
  - aws --version
  - echo "Logging into AWS ECR..."
  - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY

build:
  stage: build
  script:
    - echo "Building and pushing Docker images..."
    
    # Build & Push Nginx image
    - docker build -t $NGINX_IMAGE_TAG -f ./nginx/Dockerfile ./nginx
    - docker push $NGINX_IMAGE_TAG
    
    # Build & Push API image
    - docker build -t $API_IMAGE_TAG -f ./api/Dockerfile ./api
    - docker push $API_IMAGE_TAG

deploy:
  stage: deploy
  script:
    - echo "Deploying to ECS..."
    - aws ecs update-service --cluster $ECS_CLUSTER --service $ECS_SERVICE_API --force-new-deployment
